{"ast":null,"code":"var _jsxFileName = \"/Users/got/Desktop/network_project/network_backend/frontend/src/components/ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { encryptMessage, decryptMessage } from \"../utils/message.js\";\nimport Config from \"../assets/configs/configs.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBox = _ref => {\n  _s();\n  let {\n    chatId,\n    user,\n    userId,\n    chatWith\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    if (socket) {\n      socket.disconnect();\n    }\n    const newSocket = io(Config.BACKEND_URL, {\n      query: {\n        userId\n      },\n      withCredentials: true\n    });\n    if (!!chatId) {\n      setSocket(newSocket);\n      newSocket.on(\"connect\", () => {\n        console.log(`Connected to server with socket ID: ${newSocket.id}`);\n        newSocket.emit(\"join\", {\n          chatId,\n          user\n        });\n      });\n      newSocket.on(\"messages\", oldMessages => {\n        const decryptedOldMessages = oldMessages.map(message => {\n          if (message.systemMessage) {\n            return message;\n          }\n          return {\n            ...message,\n            text: decryptMessage(message.text)\n          };\n        });\n        setMessages(decryptedOldMessages);\n      });\n      newSocket.on(\"message\", newMessage => {\n        console.log(`Encrypted message received: ${newMessage.text}`);\n        const decryptedMessage = decryptMessage(newMessage.text);\n        setMessages(messages => [...messages, {\n          ...newMessage,\n          text: decryptedMessage\n        }]);\n      });\n    }\n  }, [chatId]);\n  useEffect(() => {\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (socket && message) {\n      const encryptedMessage = encryptMessage(message);\n      socket.emit(\"message\", {\n        chatId,\n        user,\n        text: encryptedMessage\n      });\n      setMessage(\"\");\n    }\n  };\n\n  // const dateDisplay = (dateInput) => {\n  //   const date = new Date(dateInput);\n  //   const month = date.getMonth() + 1;\n  //   const day = date.getDate();\n  //   const hour = date.getHours();\n  //   const minute = date.getMinutes();\n  //   const formattedDate = `${day >= 10 ? day : \"0\" + day}/${\n  //     month >= 10 ? month : \"0\" + month\n  //   } ${hour >= 10 ? hour : \"0\" + hour}:${\n  //     minute >= 10 ? minute : \"0\" + minute\n  //   }`;\n  //   return formattedDate;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox-container\",\n    children: !!chatId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: chatWith\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [...messages].reverse().map((message, index) => {\n          const prevMsg = [...messages].reverse()[index + 1];\n          const isSameUser = prevMsg && prevMsg.user === message.user;\n          return message.systemMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"system\",\n            children: `- ${message.text} -`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.user !== user ? \"left\" : \"right\"}`,\n            children: [message.user !== user && !isSameUser && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: message.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-time ${message.user !== user ? \"left\" : \"right\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time\",\n                children: dateDisplay(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          placeholder: \"Message...\",\n          onChange: event => setMessage(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"CveSyAF71/dW1JVFExSck5avy9w=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","encryptMessage","decryptMessage","Config","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","_ref","_s","chatId","user","userId","chatWith","messages","setMessages","message","setMessage","socket","setSocket","disconnect","newSocket","BACKEND_URL","query","withCredentials","on","console","log","id","emit","oldMessages","decryptedOldMessages","map","systemMessage","text","newMessage","decryptedMessage","handleSubmit","event","preventDefault","encryptedMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","reverse","index","prevMsg","isSameUser","dateDisplay","createdAt","onSubmit","type","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["/Users/got/Desktop/network_project/network_backend/frontend/src/components/ChatBox.jsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport io from \"socket.io-client\";\nimport {encryptMessage, decryptMessage} from \"../utils/message.js\";\nimport Config from \"../assets/configs/configs.json\";\n\nconst ChatBox = ({chatId, user, userId, chatWith}) => {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    if (socket) {\n      socket.disconnect();\n    }\n\n    const newSocket = io(Config.BACKEND_URL, {\n      query: {userId},\n      withCredentials: true,\n    });\n    if (!!chatId) {\n      setSocket(newSocket);\n      newSocket.on(\"connect\", () => {\n        console.log(`Connected to server with socket ID: ${newSocket.id}`);\n        newSocket.emit(\"join\", {chatId, user});\n      });\n      newSocket.on(\"messages\", (oldMessages) => {\n        const decryptedOldMessages = oldMessages.map((message) => {\n          if (message.systemMessage) {\n            return message;\n          }\n          return {\n            ...message,\n            text: decryptMessage(message.text),\n          };\n        });\n        setMessages(decryptedOldMessages);\n      });\n      newSocket.on(\"message\", (newMessage) => {\n        console.log(`Encrypted message received: ${newMessage.text}`);\n        const decryptedMessage = decryptMessage(newMessage.text);\n        setMessages((messages) => [\n          ...messages,\n          {...newMessage, text: decryptedMessage},\n        ]);\n      });\n    }\n  }, [chatId]);\n\n  useEffect(() => {\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (socket && message) {\n      const encryptedMessage = encryptMessage(message);\n      socket.emit(\"message\", {chatId, user, text: encryptedMessage});\n      setMessage(\"\");\n    }\n  };\n\n  // const dateDisplay = (dateInput) => {\n  //   const date = new Date(dateInput);\n  //   const month = date.getMonth() + 1;\n  //   const day = date.getDate();\n  //   const hour = date.getHours();\n  //   const minute = date.getMinutes();\n  //   const formattedDate = `${day >= 10 ? day : \"0\" + day}/${\n  //     month >= 10 ? month : \"0\" + month\n  //   } ${hour >= 10 ? hour : \"0\" + hour}:${\n  //     minute >= 10 ? minute : \"0\" + minute\n  //   }`;\n  //   return formattedDate;\n  // };\n\n  return (\n    <div className=\"chatbox-container\">\n      {!!chatId && (\n        <>\n          <div className=\"header\">\n            <h2>{chatWith}</h2>\n          </div>\n          <div className=\"message-container\">\n            {[...messages].reverse().map((message, index) => {\n              const prevMsg = [...messages].reverse()[index + 1];\n              const isSameUser = prevMsg && prevMsg.user === message.user;\n              return message.systemMessage ? (\n                <div\n                  className=\"system\"\n                  key={index}\n                >{`- ${message.text} -`}</div>\n              ) : (\n                <div\n                  className={`message ${\n                    message.user !== user ? \"left\" : \"right\"\n                  }`}\n                  key={index}\n                >\n                  {message.user !== user && !isSameUser && (\n                    <div className=\"username\">{message.user}</div>\n                  )}\n                  <div\n                    className={`text-time ${\n                      message.user !== user ? \"left\" : \"right\"\n                    }`}\n                  >\n                    <div className=\"text\">{message.text}</div>\n                    <div className=\"time\">{dateDisplay(message.createdAt)}</div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              value={message}\n              placeholder=\"Message...\"\n              onChange={(event) => setMessage(event.target.value)}\n            />\n            <button type=\"submit\">Send</button>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}