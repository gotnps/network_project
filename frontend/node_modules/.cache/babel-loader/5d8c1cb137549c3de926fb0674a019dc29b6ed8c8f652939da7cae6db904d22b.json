{"ast":null,"code":"import CryptoJS from \"crypto-js\";\nimport Config from \"../assets/configs/configs.json\";\nconst secretKey = Config.JWT_SECRET;\nexport const encryptMessage = message => {\n  const encryptedMessage = CryptoJS.AES.encrypt(message, secretKey);\n  return encryptedMessage.toString();\n};\nexport const decryptMessage = encryptedMessage => {\n  const decryptedMessage = CryptoJS.AES.decrypt(encryptedMessage, secretKey);\n  return decryptedMessage.toString(CryptoJS.enc.Utf8);\n};","map":{"version":3,"names":["CryptoJS","Config","secretKey","JWT_SECRET","encryptMessage","message","encryptedMessage","AES","encrypt","toString","decryptMessage","decryptedMessage","decrypt","enc","Utf8"],"sources":["/Users/got/Desktop/network_project/network_backend/frontend/src/utils/message.js"],"sourcesContent":["import CryptoJS from \"crypto-js\";\nimport Config from \"../assets/configs/configs.json\";\n\nconst secretKey = Config.JWT_SECRET; \n\nexport const encryptMessage = (message) => {\n  const encryptedMessage = CryptoJS.AES.encrypt(message, secretKey);\n  return encryptedMessage.toString();\n};\n\nexport const decryptMessage = (encryptedMessage) => {\n  const decryptedMessage = CryptoJS.AES.decrypt(encryptedMessage, secretKey);\n  return decryptedMessage.toString(CryptoJS.enc.Utf8);\n};\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,OAAOC,MAAM,MAAM,gCAAgC;AAEnD,MAAMC,SAAS,GAAGD,MAAM,CAACE,UAAU;AAEnC,OAAO,MAAMC,cAAc,GAAIC,OAAO,IAAK;EACzC,MAAMC,gBAAgB,GAAGN,QAAQ,CAACO,GAAG,CAACC,OAAO,CAACH,OAAO,EAAEH,SAAS,CAAC;EACjE,OAAOI,gBAAgB,CAACG,QAAQ,CAAC,CAAC;AACpC,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIJ,gBAAgB,IAAK;EAClD,MAAMK,gBAAgB,GAAGX,QAAQ,CAACO,GAAG,CAACK,OAAO,CAACN,gBAAgB,EAAEJ,SAAS,CAAC;EAC1E,OAAOS,gBAAgB,CAACF,QAAQ,CAACT,QAAQ,CAACa,GAAG,CAACC,IAAI,CAAC;AACrD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}