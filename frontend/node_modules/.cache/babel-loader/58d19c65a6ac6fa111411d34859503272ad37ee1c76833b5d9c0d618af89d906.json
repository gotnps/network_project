{"ast":null,"code":"// Helper function to get the value of a cookie by name\nexport const getCookie = name => {\n  const cookieValue = document.cookie.split(\"; \").find(row => row.startsWith(`${name}=`)).split(\"=\")[1]; // get the value after \"auth=\"\n  const userId = decodeURIComponent(cookieValue);\n  const parsedCookie = JSON.parse(userId.slice(2)); // remove the 'j:' prefix\n  const newUserId = parsedCookie.userID || parsedCookie.username; // \"640cfd781bd74dc9f57b3ebc\"\n  // const userId = JSON.parse(decodeURIComponent(cookieValue)).userID;\n  return newUserId;\n};\n\n// Helper function to delete a cookie by name\nexport const deleteCookie = name => {\n  document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=monkeydcar.website; secure; samesite=none;`;\n};\n\n// Helper function to check if a cookie exists by name\nexport const cookieExists = name => {\n  return document.cookie.split(\";\").some(cookie => {\n    return cookie.trim().startsWith(name + \"=\");\n  });\n};","map":{"version":3,"names":["getCookie","name","cookieValue","document","cookie","split","find","row","startsWith","userId","decodeURIComponent","parsedCookie","JSON","parse","slice","newUserId","userID","username","deleteCookie","cookieExists","some","trim"],"sources":["/Users/got/Desktop/network_project/network_backend/frontend/src/utils/cookies.js"],"sourcesContent":["// Helper function to get the value of a cookie by name\nexport const getCookie = (name) => {\n  const cookieValue = document.cookie\n    .split(\"; \")\n    .find((row) => row.startsWith(`${name}=`))\n    .split(\"=\")[1]; // get the value after \"auth=\"\n  const userId = decodeURIComponent(cookieValue);\n\n  const parsedCookie = JSON.parse(userId.slice(2)); // remove the 'j:' prefix\n  const newUserId = parsedCookie.userID || parsedCookie.username; // \"640cfd781bd74dc9f57b3ebc\"\n  // const userId = JSON.parse(decodeURIComponent(cookieValue)).userID;\n  return newUserId;\n};\n\n// Helper function to delete a cookie by name\nexport const deleteCookie = (name) => {\n  document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=monkeydcar.website; secure; samesite=none;`;\n};\n\n// Helper function to check if a cookie exists by name\nexport const cookieExists = (name) => {\n  return document.cookie.split(\";\").some((cookie) => {\n    return cookie.trim().startsWith(name + \"=\");\n  });\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAIC,IAAI,IAAK;EACjC,MAAMC,WAAW,GAAGC,QAAQ,CAACC,MAAM,CAChCC,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,UAAU,CAAE,GAAEP,IAAK,GAAE,CAAC,CAAC,CACzCI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,MAAMI,MAAM,GAAGC,kBAAkB,CAACR,WAAW,CAAC;EAE9C,MAAMS,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,MAAMC,SAAS,GAAGJ,YAAY,CAACK,MAAM,IAAIL,YAAY,CAACM,QAAQ,CAAC,CAAC;EAChE;EACA,OAAOF,SAAS;AAClB,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAIjB,IAAI,IAAK;EACpCE,QAAQ,CAACC,MAAM,GAAI,GAAEH,IAAK,qGAAoG;AAChI,CAAC;;AAED;AACA,OAAO,MAAMkB,YAAY,GAAIlB,IAAI,IAAK;EACpC,OAAOE,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAACe,IAAI,CAAEhB,MAAM,IAAK;IACjD,OAAOA,MAAM,CAACiB,IAAI,CAAC,CAAC,CAACb,UAAU,CAACP,IAAI,GAAG,GAAG,CAAC;EAC7C,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}